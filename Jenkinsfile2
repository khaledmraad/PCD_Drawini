pipeline {
    agent any

    tools{
        maven 'M3'
        git 'git'

    }
    environment {
        SCANNER_HOME=tool 'sonar'
    }


    stages {
        
        stage('clean workspace'){
            steps{
                cleanWs()
            }
        }
        
        stage('cloning repo') {
            steps {
                git branch: 'main', url:'https://github.com/khaledmraad/PCD_Drawini.git'
            }
        }
     
        
        stage('SonarQube analysis') {
            steps {
                withSonarQubeEnv('sonar') {
                    sh ''' 
                    cd Frontend_V2.0
                    $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Drawini_frontend \
                    -Dsonar.projectKey=Drawini_frontend
                     '''
                    
                }
            }
        }


    // //   stage("quality gate"){
    // //       steps {
    // //             script {
    // //                 waitForQualityGate abortPipeline: false, credentialsId: 'sonarqube' 
    // //             }
    // //         } 
    // //     }


        
        
        stage('create docker image') {
            steps {
                sh script:'''
                  #!/bin/bash
                  pwd
                  cd Frontend_V2.0
                  docker build -t khaledmraadtn/drawini_frontend:latest -f ./Dockerfile .
                '''
            }
        }
        
        stage('deploy to docker hub') {
            steps {
                script {
                  withCredentials([usernamePassword(credentialsId: 'docker_cred', passwordVariable: 'password', usernameVariable: 'username')]) {
                      sh "docker login -u ${username} -p ${password}"
                      sh "docker push khaledmraadtn/drawini_frontend:latest "
                  }
                }
            }
        }
        
        
    }
}

